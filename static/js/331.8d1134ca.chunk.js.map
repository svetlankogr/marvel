{"version":3,"file":"static/js/331.8d1134ca.chunk.js","mappings":"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","sources":["components/AppBanner/AppBanner.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/SinglePage/SinglePage.jsx","services/services.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import \"./errorMessage.scss\";\r\nimport img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img className=\"error\" src={img} alt=\"Error\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { getComicById } from \"../../services/services\";\r\nimport { getCharacterById } from \"../../services/services\";\r\nimport AppBanner from \"../../components/AppBanner/AppBanner\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [id]);\r\n\r\n  const updateData = () => {\r\n    onDataLoading();\r\n    clearError();\r\n    switch (dataType) {\r\n      case \"comic\":\r\n        getComicById(id).then(onDataLoaded).catch(onError);\r\n        break;\r\n      case \"character\":\r\n        getCharacterById(id).then(onDataLoaded).catch(onError);\r\n    }\r\n  };\r\n\r\n  const onDataLoaded = (data) => {\r\n    setData(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  const onDataLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const onError = () => {\r\n    setLoading(false);\r\n    setError(true);\r\n  };\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !data) ? (\r\n    <Component data={data} />\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePage;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a8a46741ba8bb1eb05cc87c982c1aa61\";\r\n\r\nconst marvelApi = axios.create({\r\n  baseURL: \"https://gateway.marvel.com:443/v1/public/\",\r\n  params: {\r\n    apikey: API_KEY,\r\n    limit: 9,\r\n  },\r\n});\r\n\r\nexport const getAllCharacters = async (offset) => {\r\n  const { data } = await marvelApi.get(`/characters?offset=${offset}`);\r\n  return data.data.results.map(transformCharacter);\r\n};\r\n\r\nexport const getCharacterById = async (id) => {\r\n  const { data } = await marvelApi.get(`/characters/${id}`);\r\n  return transformCharacter(data.data.results[0]);\r\n};\r\n\r\nexport const getCharacterByName = async (name) => {\r\n  const { data } = await marvelApi.get(`/characters?name=${name}`);\r\n  return data.data.results.map(transformCharacter);\r\n};\r\n\r\nexport const getAllComics = async (offset) => {\r\n  const { data } = await marvelApi.get(\r\n    `/comics?orderBy=issueNumber&limit=8&offset=${offset}`\r\n  );\r\n  return data.data.results.map(transformComics);\r\n};\r\n\r\nexport const getComicById = async (id) => {\r\n  const { data } = await marvelApi.get(`/comics/${id}`);\r\n  return transformComics(data.data.results[0]);\r\n};\r\n\r\nconst transformCharacter = (char) => {\r\n  return {\r\n    id: char.id,\r\n    name: char.name,\r\n    description: char.description\r\n      ? `${char.description.slice(0, 210)}...`\r\n      : \"There is no description for this character\",\r\n    thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n    homepage: char.urls[0].url,\r\n    wiki: char.urls[1].url,\r\n    comics: char.comics.items,\r\n  };\r\n};\r\n\r\nconst transformComics = (comics) => {\r\n  return {\r\n    id: comics.id,\r\n    title: comics.title,\r\n    description: comics.description || \"There is no description\",\r\n    pageCount: comics.pageCount\r\n      ? `${comics.pageCount} p.`\r\n      : \"No information about the number of pages\",\r\n    thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n    language: comics.textObjects[0]?.language || \"en-us\",\r\n    price: comics.prices[0].price\r\n      ? `${comics.prices[0].price}$`\r\n      : \"not available\",\r\n  };\r\n};\r\n"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","img","_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","updateData","onDataLoading","clearError","getComicById","then","onDataLoaded","catch","onError","getCharacterById","useCallback","errorMessage","ErrorMessage","spinner","Spinner","content","_Fragment","AppBanner","marvelApi","axios","baseURL","params","apikey","limit","getAllCharacters","_asyncToGenerator","_regeneratorRuntime","mark","_callee","offset","_yield$marvelApi$get","wrap","_context","prev","next","get","concat","sent","abrupt","results","map","transformCharacter","stop","_x","apply","arguments","_ref2","_callee2","_yield$marvelApi$get2","_context2","_x2","getCharacterByName","_ref3","_callee3","name","_yield$marvelApi$get3","_context3","_x3","getAllComics","_ref4","_callee4","_yield$marvelApi$get4","_context4","transformComics","_x4","_ref5","_callee5","_yield$marvelApi$get5","_context5","_x5","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices"],"sourceRoot":""}