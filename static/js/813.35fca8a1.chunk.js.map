{"version":3,"file":"static/js/813.35fca8a1.chunk.js","mappings":"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","sources":["components/AppBanner/AppBanner.jsx","components/ErrorMessage/ErrorMessage.jsx","components/ComicsList/ComicsList.jsx","pages/ComicsPage/ComicsPage.jsx","services/services.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import \"./errorMessage.scss\";\r\nimport img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img className=\"error\" src={img} alt=\"Error\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getAllComics } from \"../../services/services\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\nimport \"./comicsList.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ComicsList = () => {\r\n  const [comics, setComics] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    onCharListLoading();\r\n    getAllComics(offset).then(onCharListLoaded).catch(onError);\r\n  };\r\n\r\n  const onCharListLoaded = (newComicsList) => {\r\n    let ended = false;\r\n    if (newComicsList.length < 8) {\r\n      ended = true;\r\n    }\r\n    setComics((comics) => [...comics, ...newComicsList]);\r\n    setLoading(false);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 8);\r\n    setComicsEnded(ended);\r\n  };\r\n\r\n  const onCharListLoading = () => {\r\n    setNewItemLoading(true);\r\n  };\r\n\r\n  const onError = () => {\r\n    setNewItemLoading(false);\r\n    setError(true);\r\n  };\r\n\r\n  function renderItems(array) {\r\n    const items = array.map((item, i) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (\r\n        item.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ) {\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n      return (\r\n        <li className=\"comics__item\" key={i}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img\r\n              src={item.thumbnail}\r\n              alt={item.title}\r\n              className=\"comics__item-img\"\r\n            />\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">{item.price}</div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul className=\"comics__grid\">{items}</ul>;\r\n  }\r\n  const itemsList = renderItems(comics);\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {itemsList}\r\n      <button\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        className=\"button button__main button__long\"\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import ComicsList from \"../../components/ComicsList/ComicsList\";\r\nimport AppBanner from \"../../components/AppBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a8a46741ba8bb1eb05cc87c982c1aa61\";\r\n\r\nconst marvelApi = axios.create({\r\n  baseURL: \"https://gateway.marvel.com:443/v1/public/\",\r\n  params: {\r\n    apikey: API_KEY,\r\n    limit: 9,\r\n  },\r\n});\r\n\r\nexport const getAllCharacters = async (offset) => {\r\n  const { data } = await marvelApi.get(`/characters?offset=${offset}`);\r\n  return data.data.results.map(transformCharacter);\r\n};\r\n\r\nexport const getCharacterById = async (id) => {\r\n  const { data } = await marvelApi.get(`/characters/${id}`);\r\n  return transformCharacter(data.data.results[0]);\r\n};\r\n\r\nexport const getCharacterByName = async (name) => {\r\n  const { data } = await marvelApi.get(`/characters?name=${name}`);\r\n  return data.data.results.map(transformCharacter);\r\n};\r\n\r\nexport const getAllComics = async (offset) => {\r\n  const { data } = await marvelApi.get(\r\n    `/comics?orderBy=issueNumber&limit=8&offset=${offset}`\r\n  );\r\n  return data.data.results.map(transformComics);\r\n};\r\n\r\nexport const getComicById = async (id) => {\r\n  const { data } = await marvelApi.get(`/comics/${id}`);\r\n  return transformComics(data.data.results[0]);\r\n};\r\n\r\nconst transformCharacter = (char) => {\r\n  return {\r\n    id: char.id,\r\n    name: char.name,\r\n    description: char.description\r\n      ? `${char.description.slice(0, 210)}...`\r\n      : \"There is no description for this character\",\r\n    thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n    homepage: char.urls[0].url,\r\n    wiki: char.urls[1].url,\r\n    comics: char.comics.items,\r\n  };\r\n};\r\n\r\nconst transformComics = (comics) => {\r\n  return {\r\n    id: comics.id,\r\n    title: comics.title,\r\n    description: comics.description || \"There is no description\",\r\n    pageCount: comics.pageCount\r\n      ? `${comics.pageCount} p.`\r\n      : \"No information about the number of pages\",\r\n    thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n    language: comics.textObjects[0]?.language || \"en-us\",\r\n    price: comics.prices[0].price\r\n      ? `${comics.prices[0].price}$`\r\n      : \"not available\",\r\n  };\r\n};\r\n"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","img","_useState","useState","_useState2","_slicedToArray","comics","setComics","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","newItemLoading","setNewItemLoading","_useState9","_useState10","offset","setOffset","_useState11","_useState12","comicsEnded","setComicsEnded","useEffect","onRequest","initial","onCharListLoading","getAllComics","then","onCharListLoaded","catch","onError","newComicsList","ended","length","concat","_toConsumableArray","itemsList","array","items","map","item","i","thumbnail","objectFit","Link","to","id","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","display","onClick","_Fragment","AppBanner","ComicsList","marvelApi","axios","baseURL","params","apikey","limit","getAllCharacters","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$marvelApi$get","data","wrap","_context","prev","next","get","sent","abrupt","results","transformCharacter","stop","_x","apply","arguments","getCharacterById","_ref2","_callee2","_yield$marvelApi$get2","_context2","_x2","getCharacterByName","_ref3","_callee3","name","_yield$marvelApi$get3","_context3","_x3","_ref4","_callee4","_yield$marvelApi$get4","_context4","transformComics","_x4","getComicById","_ref5","_callee5","_yield$marvelApi$get5","_context5","_x5","char","description","slice","path","extension","homepage","urls","url","wiki","_comics$textObjects$","pageCount","language","textObjects","prices"],"sourceRoot":""}